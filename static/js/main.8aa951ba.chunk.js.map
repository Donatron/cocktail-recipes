{"version":3,"sources":["store/actions/index.js","components/pageTitle.js","components/header.js","components/LoadingSpinner.js","components/dropdowns/SearchTypeDropdown.js","components/dropdowns/AlcoholContentDropdown.js","components/dropdowns/GlassTypeDropdown.js","components/ErrorMessage.js","components/CocktailSearch.js","components/CocktailRandom.js","components/CocktailSearchResult.js","components/CocktailSearchResults.js","components/CocktailList.js","components/Home.js","components/CocktailIngredient.js","components/CocktailInstructions.js","components/CocktailAlternatives.js","components/CocktailGlassType.js","components/CocktailDetails.js","components/footer.js","components/ScrollToTop.js","App.js","store/reducers/cocktailReducer.js","store/reducers/searchReducer.js","store/reducers/errorReducer.js","store/reducers/index.js","store/reducers/loadingReducer.js","store/store.js","index.js"],"names":["DATA_LOADING","FETCH_RANDOM_COCKTAIL","FETCH_COCKTAILS","FETCH_COCKTAIL","SET_SEARCH_TYPE","SET_SEARCH_TERM","SET_SEARCH_PARAMS","CLEAR_SEARCH_TERM","CLEAR_SEARCH_PARAMS","SET_ERROR","CLEAR_ERROR","CLEAR_SELECTED_COCKTAIL","RESET_STATE","ROOT_URL","fetchRandomCocktail","dispatch","a","type","axios","get","response","payload","data","drinks","setError","setSearchType","searchType","setSearchParams","value","message","clearError","clearSelectedCocktail","connect","state","search","cocktail","loading","error","props","selectedCocktail","setSelectedCocktailPageTitle","strDrink","toUpperCase","className","Container","Row","Col","to","icon","faArrowLeft","onClick","isRandom","searchTerm","searchParams","alcoholContent","glassType","resetState","showNewSearch","cocktails","Object","keys","length","showNewSearchButton","faCocktail","Button","color","LoadingSpinner","style","marginTop","height","Spinner","clearSearchFilters","useState","searchByDropdownOpen","setSearchByDropdownOpen","onSelectSearchType","e","target","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","alcoholContentDropdownOpen","setAlcoholContentDropdownOpen","onSelectAlcoholContent","glassTypeDropdownOpen","setGlassTypeDropdownOpen","onSelectGlassType","ErrorMessage","Alert","searchCocktailsByName","name","searchCocktailsByIngredient","ingredient","searchCocktailsByGlassType","searchCocktailsByAlcoholContent","setSearchTerm","clearSearchTerm","clearSearchParams","InputGroup","Input","placeholder","onChange","showSubmitButton","CocktailRandom","cocktailId","xs","md","src","strDrinkThumb","alt","CocktailSearchResult","searchResult","lg","idDrink","CocktailSearchResults","searchResults","push","map","renderSearchResults","CocktailList","this","Component","useEffect","CocktailIngredient","measure","CocktailInstructions","instructions","CocktailAlternatives","alternatives","CocktailGlassType","CocktailDetails","renderIngredients","ingredients","i","resetError","bind","id","match","params","fetchCocktailById","strInstructions","strGlass","strDrinkAlternate","Footer","Date","getFullYear","href","rel","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","withRouter","App","path","component","Home","initialState","combineReducers","action","cocktailRecipes","persistConfig","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","storage","blacklist","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8aa951ba.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const DATA_LOADING = 'DATA_LOADING';\nexport const FETCH_RANDOM_COCKTAIL = 'FETCH_RANDOM_COCKTAIL';\nexport const FETCH_COCKTAILS = 'FETCH_COCKTAILS';\nexport const FETCH_COCKTAIL = 'FETCH_COCKTAIL';\nexport const SET_SEARCH_TYPE = 'SET_SEARCH_TYPE';\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\nexport const SET_SEARCH_PARAMS = 'SET_SEARCH_PARAMS';\nexport const CLEAR_SEARCH_TERM = 'CLEAR_SEARCH_TERM';\nexport const CLEAR_SEARCH_PARAMS = 'CLEAR_SEARCH_PARAMS';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const CLEAR_SELECTED_COCKTAIL = 'CLEAR_SELECTED_COCKTAIL';\nexport const RESET_STATE = 'RESET_STATE';\n\n\nconst ROOT_URL = 'https://www.thecocktaildb.com/api/json/v1/1';\n\nexport const fetchRandomCocktail = () => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/random.php`);\n\n    dispatch({\n      type: FETCH_RANDOM_COCKTAIL,\n      payload: response.data.drinks[0]\n    });\n\n  } catch (error) {\n    dispatch(setError('Having trouble loading a random cocktail. Please try again'));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const fetchCocktailById = (id) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await await axios.get(`${ROOT_URL}/lookup.php?i=${id}`);\n\n    dispatch({\n      type: FETCH_COCKTAIL,\n      payload: response.data.drinks[0]\n    });\n  } catch (error) {\n    dispatch(setError('Sorry, unable to locate a cocktail with that ID'));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByName = (name) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/search.php?s=${name}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails named ${name}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByIngredient = (ingredient) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?i=${ingredient}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails using ${ingredient}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByGlassType = (glassType) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?g=${glassType}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails using a ${glassType}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByAlcoholContent = (alcoholContent) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?a=${alcoholContent}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails with ${alcoholContent} content. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const setSearchType = (searchType) => {\n  return {\n    type: SET_SEARCH_TYPE,\n    payload: searchType\n  }\n}\n\nexport const setSearchTerm = (searchTerm) => {\n  return {\n    type: SET_SEARCH_TERM,\n    payload: searchTerm\n  }\n}\n\nexport const setSearchParams = (searchType, value) => {\n  return {\n    type: SET_SEARCH_PARAMS,\n    searchType: searchType,\n    payload: value\n  }\n}\n\nexport const clearSearchParams = () => {\n  return {\n    type: CLEAR_SEARCH_PARAMS\n  }\n}\n\nexport const clearSearchTerm = (searchTerm) => {\n  return {\n    type: CLEAR_SEARCH_TERM\n  }\n}\n\nexport const setError = (message) => {\n  return {\n    type: SET_ERROR,\n    payload: message\n  }\n}\n\nexport const clearError = () => {\n  return {\n    type: CLEAR_ERROR\n  }\n}\n\nexport const clearSelectedCocktail = () => {\n  return {\n    type: CLEAR_SELECTED_COCKTAIL\n  }\n}\n\nexport const resetState = () => {\n  return {\n    type: RESET_STATE\n  }\n}\n\nexport const dataLoading = () => {\n  return {\n    type: DATA_LOADING\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { clearSelectedCocktail, clearError } from '../store/actions'\n\nconst PageTitle = (props) => {\n  const {\n    search,\n    cocktail,\n    clearSelectedCocktail,\n    loading,\n    error,\n    clearError\n  } = props;\n  const { selectedCocktail } = cocktail;\n\n  if (loading) return null;\n\n  const setPageTitle = () => {\n    if (selectedCocktail) return setSelectedCocktailPageTitle();\n    if (search.searchType === 'name' || search.searchType === 'ingredient') {\n      return `COCKTAILS USING ${search.searchTerm.toUpperCase()} RECIPES`;\n    }\n    if (search.searchType === 'alcoholContent') {\n      return `RECIPES WITH ${search.searchParams.alcoholContent.toUpperCase()} CONTENT`;\n    }\n    if (search.searchType === 'glassType') {\n      return `RECIPES USING A ${search.searchParams.glassType.toUpperCase()}`;\n    }\n  }\n\n  const setSelectedCocktailPageTitle = () => {\n    return `${selectedCocktail.strDrink.toUpperCase()} RECIPE`;\n  }\n\n  const handleClick = () => {\n    clearSelectedCocktail();\n    clearError();\n  }\n\n  if (error.message) return null;\n\n  return (\n    <div className=\"page-title\">\n      <Container>\n        <Row >\n          <Col className=\"page-title_title\">\n            {selectedCocktail && <Link to=\"/\" ><FontAwesomeIcon icon={faArrowLeft} onClick={handleClick} /></Link>}\n            <h3>\n              {cocktail.isRandom && !selectedCocktail ? 'Featured Cocktail' : setPageTitle()}\n            </h3>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search,\n    cocktail: state.cocktail,\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nexport default connect(mapStateToProps, {\n  clearSelectedCocktail,\n  clearError\n})(PageTitle);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button } from 'reactstrap';\nimport { faCocktail } from '@fortawesome/free-solid-svg-icons';\nimport PageTitle from './pageTitle';\n\nimport { clearSelectedCocktail, resetState, fetchRandomCocktail } from '../store/actions'\n\nconst Header = (props) => {\n  const { cocktail, clearSelectedCocktail, resetState, fetchRandomCocktail } = props;\n\n  const handleReturnHome = () => {\n    clearSelectedCocktail();\n  }\n\n  const handleNewSearch = () => {\n    resetState();\n    fetchRandomCocktail();\n  }\n\n  const showNewSearchButton = () => {\n    const { cocktails, selectedCocktail, isRandom } = cocktail;\n    if (!selectedCocktail && !isRandom && Object.keys(cocktails).length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  const showNewSearch = showNewSearchButton();\n\n  return (\n    <div className=\"header\" >\n      <Link to=\"/\" onClick={handleReturnHome}>\n        <FontAwesomeIcon icon={faCocktail} />\n      </Link>\n      <h1>Cocktail Recipes</h1>\n      <PageTitle />\n      {showNewSearch ? <Button color=\"info\" onClick={handleNewSearch} className=\"btn-newSearch\">New Search</Button> : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail\n  }\n}\n\nexport default connect(mapStateToProps, { clearSelectedCocktail, resetState, fetchRandomCocktail })(Header);","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport const LoadingSpinner = () => {\n  return (\n    <div className=\"\" style={{ marginTop: \"250px\", height: \"100vh\" }}>\n      <Spinner color=\"info\" />\n    </div>\n  )\n}\n\nexport default LoadingSpinner;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchType } from '../../store/actions'\n\nexport const SearchTypeDropdown = (props) => {\n  const { clearSearchFilters, setSearchType, search } = props;\n  const { searchType } = search;\n  const [searchByDropdownOpen, setSearchByDropdownOpen] = useState(false);\n  const toggleSearchDropdown = (e) => setSearchByDropdownOpen(prevState => !prevState);\n\n  const onSelectSearchType = (e) => {\n    clearSearchFilters();\n    setSearchType(e.target.value)\n  }\n\n  return (\n    <Dropdown isOpen={searchByDropdownOpen} toggle={toggleSearchDropdown}>\n      <DropdownToggle caret>\n        {searchType ? searchType.toUpperCase() : \"Search By\"}\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectSearchType} value=\"name\">Name</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"ingredient\">Ingredient</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"alcoholContent\">Alcohol Content</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"glassType\">Glass Type</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"random\">Random</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchType })(SearchTypeDropdown);","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchParams } from '../../store/actions';\n\nexport const AlcoholContentDropdown = (props) => {\n  const { setSearchParams, clearSearchFilters } = props;\n  const { searchType } = props.search;\n  const [alcoholContentDropdownOpen, setAlcoholContentDropdownOpen] = useState(false);\n  const toggleAlcoholContentDropdown = () => setAlcoholContentDropdownOpen(prevState => !prevState);\n\n  const onSelectAlcoholContent = (e) => {\n    clearSearchFilters();\n    setSearchParams(searchType, e.target.value);\n  };\n\n  return (\n    <Dropdown isOpen={alcoholContentDropdownOpen} toggle={toggleAlcoholContentDropdown}>\n      <DropdownToggle caret>\n        Alcohol Content\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"alcoholic\">Alcoholic</DropdownItem>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"non alcoholic\">Non Alcoholic</DropdownItem>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"optional alcohol\">Optional Alcohol</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchParams })(AlcoholContentDropdown);","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchParams } from '../../store/actions';\n\nexport const GlassTypeDropdown = (props) => {\n  const { clearSearchFilters, setSearchParams, search } = props;\n  const { searchType } = search;\n  const [glassTypeDropdownOpen, setGlassTypeDropdownOpen] = useState(false);\n  const toggleGlassTypeDropdown = () => setGlassTypeDropdownOpen(prevState => !prevState);\n\n  const onSelectGlassType = (e) => {\n    clearSearchFilters();\n    setSearchParams(searchType, e.target.value);\n  };\n\n\n  return (\n    <Dropdown isOpen={glassTypeDropdownOpen} toggle={toggleGlassTypeDropdown}>\n      <DropdownToggle caret>\n        Glass Type\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectGlassType} value=\"highball glass\">Highball Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"cocktail glass\">Cocktail Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"old-fashioned glass\">Old-fashioned Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"whiskey glass\">Whiskey Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"collins glass\">Collins Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"pousse cafe glass\">Pousse Cafe Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"champagne flute\">Champagne Flute</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchParams })(GlassTypeDropdown);","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nconst ErrorMessage = ({ message }) => {\n  return <Alert color=\"danger\">{message}</Alert>\n}\n\nexport default ErrorMessage;","import React from 'react';\nimport { InputGroup, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport SearchTypeDropdown from './dropdowns/SearchTypeDropdown';\nimport AlcoholContentDropdown from './dropdowns/AlcoholContentDropdown';\nimport GlassTypeDropdown from './dropdowns/GlassTypeDropdown';\nimport ErrorMessage from './ErrorMessage';\n\nimport {\n  searchCocktailsByName,\n  searchCocktailsByIngredient,\n  searchCocktailsByGlassType,\n  searchCocktailsByAlcoholContent,\n  fetchRandomCocktail,\n  setSearchType,\n  setSearchTerm,\n  clearSearchTerm,\n  setSearchParams,\n  clearSearchParams\n} from '../store/actions';\n\nconst CocktailSearch = (props) => {\n  const {\n    search,\n    error,\n    searchCocktailsByName,\n    searchCocktailsByIngredient,\n    searchCocktailsByGlassType,\n    searchCocktailsByAlcoholContent,\n    fetchRandomCocktail,\n    setSearchTerm,\n    clearSearchTerm,\n    clearSearchParams\n  } = props;\n  const { searchType, searchTerm, searchParams } = search;\n\n  const onSearchTermChange = (e) => {\n    clearSearchFilters();\n    setSearchTerm(e.target.value)\n  };\n\n  const handleSearchSubmit = () => {\n    switch (searchType) {\n      case \"name\":\n        return searchCocktailsByName(searchTerm);\n      case \"ingredient\":\n        return searchCocktailsByIngredient(searchTerm);\n      case \"glassType\":\n        return searchCocktailsByGlassType(searchParams.glassType);\n      case \"alcoholContent\":\n        return searchCocktailsByAlcoholContent(searchParams.alcoholContent);\n      case \"random\":\n        return fetchRandomCocktail();\n      default:\n        return;\n    }\n  };\n\n  const showSubmitButton = () => {\n    const { glassType, alcoholContent } = searchParams\n    if ((searchType === \"name\" || searchType === \"ingredient\") && (searchTerm !== null && searchTerm !== \"\")) return true;\n    if (searchType === \"alcoholContent\" && alcoholContent !== null) return true;\n    if (searchType === \"glassType\" && glassType !== null) return true;\n    if (searchType === \"random\") return true;\n  }\n\n  const clearSearchFilters = () => {\n    clearSearchTerm();\n    clearSearchParams();\n  }\n\n  return (\n    <div className=\"container cocktail-search\">\n      <h4>Search Cocktails</h4>\n      <SearchTypeDropdown clearSearchFilters={clearSearchFilters} />\n      {searchType === \"alcoholContent\" ? <AlcoholContentDropdown clearSearchFilters={clearSearchFilters} /> : null}\n      {searchType === \"glassType\" ? <GlassTypeDropdown clearSearchFilters={clearSearchFilters} /> : null}\n      {\n        searchType === \"name\" || searchType === \"ingredient\" ? (\n          <InputGroup>\n            <Input\n              placeholder=\"enter search term\"\n              className={`cocktail-search_input ${error.message && 'error'}`}\n              onChange={onSearchTermChange}\n            />\n          </InputGroup>\n        ) : null\n      }\n      {error.message ? <ErrorMessage message={error.message} /> : null}\n      {\n        showSubmitButton() ? <Button color=\"primary\" onClick={handleSearchSubmit}>Search</Button> : null\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search,\n    error: state.error\n  }\n}\n\nexport default connect(mapStateToProps, {\n  searchCocktailsByName,\n  searchCocktailsByIngredient,\n  searchCocktailsByGlassType,\n  searchCocktailsByAlcoholContent,\n  fetchRandomCocktail,\n  setSearchType,\n  setSearchTerm,\n  clearSearchTerm,\n  setSearchParams,\n  clearSearchParams\n})(CocktailSearch);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap'\n\nimport CocktailSearch from './CocktailSearch'\n\nconst CocktailRandom = ({ cocktail }) => {\n  const cocktailId = Object.keys(cocktail)[0];\n\n  return (\n    <Row>\n      <Col xs=\"12\" md=\"6\" className=\"cocktail-list_image\">\n        <div className=\"cocktail-list_image-image\">\n          <img src={`${cocktail[cocktailId].strDrinkThumb}`} alt=\"margarita\" />\n          <p>{cocktail[cocktailId].strDrink}</p>\n          <Link to={`details/${cocktailId}`} className=\"btn btn-primary\">Recipe</Link>\n\n        </div>\n      </Col>\n      <Col xs=\"12\" md=\"6\" className=\"cocktail-list_details\">\n        <CocktailSearch />\n      </Col>\n    </Row>\n  )\n}\n\nexport default CocktailRandom;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col } from 'reactstrap';\n\nconst CocktailSearchResult = ({ searchResult }) => {\n  return (\n    <Col xs={12} md={4} lg={3} className=\"cocktail-search-results_result\">\n      <Link to={`/details/${searchResult.idDrink}`}>\n        <img src={`${searchResult.strDrinkThumb}`} alt={`${searchResult.strDrink}`} />\n        <p>{searchResult.strDrink}</p>\n      </Link>\n    </Col>\n  );\n}\n\nexport default CocktailSearchResult;","import React from 'react';\nimport { Container, Row } from 'reactstrap';\n\nimport CocktailSearchResult from './CocktailSearchResult'\n\nconst CocktailSearchResults = ({ cocktails }) => {\n\n  const renderSearchResults = () => {\n    const searchResults = []\n    for (const cocktail in cocktails) {\n      searchResults.push(cocktail);\n    }\n\n    return searchResults.map(searchResult => <CocktailSearchResult searchResult={cocktails[searchResult]} key={cocktails[searchResult].idDrink} />);\n  }\n\n  return (\n    <Container className=\"cocktail-search-results\">\n      <Row>\n        {renderSearchResults()}\n      </Row>\n    </Container >\n  );\n}\n\nexport default CocktailSearchResults;","import React, { Component } from 'react';\nimport { Container } from 'reactstrap'\nimport { connect } from 'react-redux'\n\nimport CocktailRandom from './CocktailRandom';\nimport CocktailSearchResults from './CocktailSearchResults';\n\nclass CocktailList extends Component {\n  render() {\n    const { cocktail } = this.props;\n    const { cocktails, isRandom } = cocktail;\n\n    return (\n      <Container className=\"cocktail-list\">\n        {\n          isRandom ? <CocktailRandom cocktail={cocktails} /> : <CocktailSearchResults cocktails={cocktails} />\n        }\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail\n  }\n}\n\nexport default connect(mapStateToProps)(CocktailList);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchRandomCocktail } from '../store/actions';\nimport LoadingSpinner from './LoadingSpinner'\nimport CocktailList from './CocktailList';\n\nconst Home = (props) => {\n  const { loading, fetchRandomCocktail, cocktail } = props;\n\n  useEffect(() => {\n    if (!Object.keys(cocktail.cocktails).length) {\n      fetchRandomCocktail();\n    }\n  }, []);\n\n  if (loading) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className=\"\">\n      <CocktailList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    cocktail: state.cocktail\n  };\n};\n\nexport default connect(mapStateToProps, { fetchRandomCocktail })(Home);","import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst CocktailIngredient = ({ ingredient }) => {\n  return (\n    <Col xs=\"6\" md=\"3\" className=\"cocktail-details_details-ingredients_ingredient\">\n      <img src={`https://www.thecocktaildb.com/images/ingredients/${ingredient.name}.png`} alt={`${ingredient.name}`} />\n      <p>{ingredient.name}</p>\n      <p>{ingredient.measure}</p>\n    </Col>\n  );\n}\n\nexport default CocktailIngredient;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailInstructions = ({ instructions }) => {\n  return (\n    <Row>\n      <Col className=\"cocktail-details_details-instructions\">\n        <h4>Instructions</h4>\n        <div className=\"\">\n          <p>{instructions}</p>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailInstructions;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailAlternatives = ({ alternatives }) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"cocktail-details_details-alternatives\">\n          <h4>Alternatives</h4>\n          <div className=\"\">\n            <p>{alternatives}</p>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailAlternatives;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailGlassType = ({ glassType }) => {\n  return (\n    <Row>\n      <Col className=\"cocktail-details_details-glass\">\n        <h4>Glass Type</h4>\n        <div className=\"\">\n          <p>{glassType}</p>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailGlassType;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { fetchCocktailById, clearError, clearSelectedCocktail } from '../store/actions'\nimport CocktailIngredient from './CocktailIngredient';\nimport CocktailInstructions from './CocktailInstructions';\nimport CocktailAlternatives from './CocktailAlternatives';\nimport CocktailGlassType from './CocktailGlassType';\nimport LoadingSpinner from './LoadingSpinner';\n\nclass CocktailDetails extends Component {\n  constructor() {\n    super();\n\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.resetError = this.resetError.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchCocktailById(id);\n  }\n\n  renderIngredients = (selectedCocktail) => {\n    let ingredients = [];\n\n    for (let i = 1; i <= 15; i++) {\n      if (selectedCocktail[`strIngredient${i}`]) {\n        const ingredient = {};\n        ingredient.name = selectedCocktail[`strIngredient${i}`];\n        ingredient.measure = selectedCocktail[`strMeasure${i}`];\n\n        ingredients.push(ingredient);\n      }\n    }\n\n    return ingredients.map((ingredient, i) => {\n      return <CocktailIngredient ingredient={ingredient} key={i} />\n    })\n  }\n\n  resetError = () => {\n    this.props.clearError()\n    this.props.clearSelectedCocktail();\n  }\n\n  render() {\n    const { cocktail, error, loading } = this.props;\n    const { selectedCocktail } = cocktail;\n\n    { if (loading) return <LoadingSpinner /> }\n\n    return selectedCocktail && !error.message ? (\n      <Container className=\"cocktail-details\">\n        <Row>\n          <Col md=\"6\" xs=\"12\" className=\"cocktail-details_image\">\n            {<div className=\"cocktail-details_image-image\">\n              <img src={`${selectedCocktail.strDrinkThumb}`} alt=\"margarita\" />\n            </div>}\n          </Col>\n          <Col md=\"6\" xs=\"12\" className=\"cocktail-details_details\">\n            <Row>\n              <h4>Ingredients</h4>\n              {this.renderIngredients(selectedCocktail)}\n            </Row>\n            <CocktailInstructions instructions={selectedCocktail.strInstructions} />\n            <CocktailGlassType glassType={selectedCocktail.strGlass} />\n            {\n              selectedCocktail.strDrinkAlternate ? <CocktailAlternatives alternatives={selectedCocktail.strDrinkAlternate} /> : null\n            }\n          </Col>\n        </Row>\n      </Container>\n    ) : error.message && <Container className=\"cocktail-details\">\n      <Row>\n        <Col xs={12}>\n          {error.message}\n        </Col>\n        <Col xs={12}>\n          <Link to=\"/\" onClick={this.resetError}>Go Back</Link>\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail,\n    error: state.error,\n    loading: state.loading\n  }\n}\n\nexport default connect(mapStateToProps, { fetchCocktailById, clearError, clearSelectedCocktail })(CocktailDetails);","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        {\"\\u00A9\"} {new Date().getFullYear()}{\" \"}\n        <a\n          href=\"https://donatron.github.io/portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Don Macarthur\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.scss';\n\nimport Header from './components/header';\nimport Home from './components/Home';\nimport CocktailDetails from './components/CocktailDetails';\nimport CocktailSearchResults from './components/CocktailSearchResults';\nimport Footer from './components/footer';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <ScrollToTop>\n          <Header />\n          <Switch>\n            <Route path=\"/search-results\" component={CocktailSearchResults} />\n            <Route path=\"/details/:id\" component={CocktailDetails} />\n            <Route path=\"/\" component={Home} />\n          </Switch>\n        </ScrollToTop>\n        <Footer />\n      </BrowserRouter >\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_RANDOM_COCKTAIL,\n  FETCH_COCKTAILS,\n  FETCH_COCKTAIL,\n  CLEAR_SELECTED_COCKTAIL,\n  RESET_STATE,\n} from '../actions';\n\nconst initialState = {\n  isRandom: false,\n  cocktails: {},\n  selectedCocktail: null\n}\n\nexport default function cocktailReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_RANDOM_COCKTAIL:\n      return {\n        ...state,\n        cocktails: {\n          [action.payload.idDrink]: action.payload\n        },\n        isRandom: true\n      }\n    case FETCH_COCKTAILS:\n      const cocktailRecipes = {}\n      action.payload.map(cocktail => {\n        return cocktailRecipes[cocktail.idDrink] = cocktail\n      });\n\n      return {\n        ...state,\n        isRandom: false,\n        cocktails: cocktailRecipes\n      }\n    case FETCH_COCKTAIL:\n      return {\n        ...state,\n        selectedCocktail: action.payload\n      }\n    case CLEAR_SELECTED_COCKTAIL:\n      return {\n        ...state,\n        selectedCocktail: null\n      }\n    case RESET_STATE:\n      return initialState\n    default:\n      return state;\n  }\n}","import {\n  SET_SEARCH_TYPE,\n  SET_SEARCH_TERM,\n  CLEAR_SEARCH_TERM,\n  SET_SEARCH_PARAMS,\n  CLEAR_SEARCH_PARAMS,\n  RESET_STATE\n} from '../actions'\n\nconst initialState = {\n  searchType: null,\n  searchTerm: null,\n  searchParams: {\n    glassType: null,\n    alcoholContent: null\n  }\n}\n\nexport default function searchReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SEARCH_TYPE:\n      return {\n        ...state,\n        searchType: action.payload\n      }\n    case SET_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: action.payload\n      }\n    case CLEAR_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: null\n      }\n    case SET_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: {\n          ...state.searchParams,\n          [action.searchType]: action.payload\n        }\n      }\n    case CLEAR_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: {\n          ...initialState.searchParams\n        }\n      }\n    case RESET_STATE:\n      return initialState\n    default:\n      return state;\n  }\n}","import { SET_ERROR, CLEAR_ERROR, RESET_STATE } from '../actions';\n\nconst initialState = {\n  message: null\n}\n\nexport default function errorReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_ERROR:\n      return {\n        ...state,\n        message: action.payload\n      }\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        message: null\n      }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport loadingReducer from './loadingReducer';\nimport cocktailReducer from './cocktailReducer';\nimport searchReducer from './searchReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  loading: loadingReducer,\n  cocktail: cocktailReducer,\n  search: searchReducer,\n  error: errorReducer\n});","import { DATA_LOADING } from '../actions';\n\nconst initialState = false;\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case DATA_LOADING:\n      return !state\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['loading']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = process.env.NODE_ENV === 'production' ?\n  createStore(persistedReducer, applyMiddleware(thunk)) :\n  createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport { store, persistor } from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}