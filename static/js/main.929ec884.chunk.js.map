{"version":3,"sources":["store/actions/index.js","components/pageTitle.js","components/header.js","components/LoadingSpinner.js","components/dropdowns/SearchTypeDropdown.js","components/dropdowns/AlcoholContentDropdown.js","components/dropdowns/GlassTypeDropdown.js","components/ErrorMessage.js","components/CocktailSearch.js","components/CocktailRandom.js","components/CocktailSearchResult.js","components/CocktailSearchResults.js","components/CocktailList.js","components/Home.js","components/CocktailIngredient.js","components/CocktailInstructions.js","components/CocktailAlternatives.js","components/CocktailGlassType.js","components/CocktailDetails.js","components/footer.js","components/ScrollToTop.js","App.js","store/reducers/cocktailReducer.js","store/reducers/searchReducer.js","store/reducers/errorReducer.js","store/reducers/index.js","store/reducers/loadingReducer.js","store/store.js","index.js"],"names":["DATA_LOADING","FETCH_RANDOM_COCKTAIL","FETCH_COCKTAILS","FETCH_COCKTAIL","SET_SEARCH_TYPE","SET_SEARCH_TERM","SET_SEARCH_PARAMS","CLEAR_SEARCH_TERM","CLEAR_SEARCH_PARAMS","SET_ERROR","CLEAR_ERROR","CLEAR_SELECTED_COCKTAIL","RESET_STATE","ROOT_URL","fetchRandomCocktail","dispatch","a","type","axios","get","response","payload","data","drinks","setError","setSearchType","searchType","setSearchParams","value","message","clearError","clearSelectedCocktail","connect","state","cocktail","loading","error","resetState","props","selectedCocktail","className","Container","Row","Col","to","icon","faArrowLeft","onClick","isRandom","strDrink","Button","color","faCocktail","LoadingSpinner","style","marginTop","height","Spinner","search","clearSearchFilters","useState","searchByDropdownOpen","setSearchByDropdownOpen","onSelectSearchType","e","target","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","toUpperCase","DropdownMenu","DropdownItem","alcoholContentDropdownOpen","setAlcoholContentDropdownOpen","onSelectAlcoholContent","glassTypeDropdownOpen","setGlassTypeDropdownOpen","onSelectGlassType","ErrorMessage","Alert","searchCocktailsByName","name","searchCocktailsByIngredient","ingredient","searchCocktailsByGlassType","glassType","searchCocktailsByAlcoholContent","alcoholContent","setSearchTerm","searchTerm","clearSearchTerm","clearSearchParams","searchParams","InputGroup","Input","placeholder","onChange","showSubmitButton","CocktailRandom","cocktailId","Object","keys","xs","md","src","strDrinkThumb","alt","window","location","href","CocktailSearchResult","searchResult","lg","idDrink","CocktailSearchResults","cocktails","searchResults","push","map","renderSearchResults","CocktailList","this","Component","useEffect","length","CocktailIngredient","measure","CocktailInstructions","instructions","CocktailAlternatives","alternatives","CocktailGlassType","CocktailDetails","renderIngredients","ingredients","i","resetError","bind","id","match","params","fetchCocktailById","strInstructions","strGlass","strDrinkAlternate","Footer","Date","getFullYear","rel","ScrollToTop","prevProps","pathname","scrollTo","children","withRouter","App","path","component","Home","initialState","combineReducers","action","cocktailRecipes","persistConfig","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","key","storage","blacklist","persistedReducer","persistReducer","reducers","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.929ec884.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const DATA_LOADING = 'DATA_LOADING';\nexport const FETCH_RANDOM_COCKTAIL = 'FETCH_RANDOM_COCKTAIL';\nexport const FETCH_COCKTAILS = 'FETCH_COCKTAILS';\nexport const FETCH_COCKTAIL = 'FETCH_COCKTAIL';\nexport const SET_SEARCH_TYPE = 'SET_SEARCH_TYPE';\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM';\nexport const SET_SEARCH_PARAMS = 'SET_SEARCH_PARAMS';\nexport const CLEAR_SEARCH_TERM = 'CLEAR_SEARCH_TERM';\nexport const CLEAR_SEARCH_PARAMS = 'CLEAR_SEARCH_PARAMS';\nexport const SET_ERROR = 'SET_ERROR';\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\nexport const CLEAR_SELECTED_COCKTAIL = 'CLEAR_SELECTED_COCKTAIL';\nexport const RESET_STATE = 'RESET_STATE';\n\n\nconst ROOT_URL = 'https://www.thecocktaildb.com/api/json/v1/1';\n\nexport const fetchRandomCocktail = () => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/random.php`);\n\n    dispatch({\n      type: FETCH_RANDOM_COCKTAIL,\n      payload: response.data.drinks[0]\n    });\n\n  } catch (error) {\n    dispatch(setError('Having trouble loading a random cocktail. Please try again'));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const fetchCocktailById = (id) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await await axios.get(`${ROOT_URL}/lookup.php?i=${id}`);\n\n    dispatch({\n      type: FETCH_COCKTAIL,\n      payload: response.data.drinks[0]\n    });\n  } catch (error) {\n    dispatch(setError('Sorry, unable to locate a cocktail with that ID'));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByName = (name) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/search.php?s=${name}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails named ${name}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByIngredient = (ingredient) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?i=${ingredient}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails using ${ingredient}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByGlassType = (glassType) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?g=${glassType}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails using a ${glassType}. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const searchCocktailsByAlcoholContent = (alcoholContent) => async (dispatch) => {\n  dispatch({\n    type: DATA_LOADING\n  });\n\n  let response;\n\n  try {\n    response = await axios.get(`${ROOT_URL}/filter.php?a=${alcoholContent}`);\n\n    dispatch({\n      type: FETCH_COCKTAILS,\n      payload: response.data.drinks\n    });\n\n  } catch (error) {\n    dispatch(setError(`Sorry, having trouble finding cocktails with ${alcoholContent} content. Please try another search.`));\n  }\n\n  dispatch({\n    type: DATA_LOADING\n  });\n}\n\nexport const setSearchType = (searchType) => {\n  return {\n    type: SET_SEARCH_TYPE,\n    payload: searchType\n  }\n}\n\nexport const setSearchTerm = (searchTerm) => {\n  return {\n    type: SET_SEARCH_TERM,\n    payload: searchTerm\n  }\n}\n\nexport const setSearchParams = (searchType, value) => {\n  return {\n    type: SET_SEARCH_PARAMS,\n    searchType: searchType,\n    payload: value\n  }\n}\n\nexport const clearSearchParams = () => {\n  return {\n    type: CLEAR_SEARCH_PARAMS\n  }\n}\n\nexport const clearSearchTerm = (searchTerm) => {\n  return {\n    type: CLEAR_SEARCH_TERM\n  }\n}\n\nexport const setError = (message) => {\n  return {\n    type: SET_ERROR,\n    payload: message\n  }\n}\n\nexport const clearError = () => {\n  return {\n    type: CLEAR_ERROR\n  }\n}\n\nexport const clearSelectedCocktail = () => {\n  return {\n    type: CLEAR_SELECTED_COCKTAIL\n  }\n}\n\nexport const resetState = () => {\n  return {\n    type: RESET_STATE\n  }\n}\n\nexport const dataLoading = () => {\n  return {\n    type: DATA_LOADING\n  }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { clearSelectedCocktail, clearError, resetState, fetchRandomCocktail } from '../store/actions'\n\nconst PageTitle = (props) => {\n  const {\n    cocktail,\n    clearSelectedCocktail,\n    loading,\n    error,\n    clearError,\n    resetState,\n    fetchRandomCocktail\n  } = props;\n  const { selectedCocktail } = cocktail;\n\n  if (loading) return null;\n\n  const handleClick = () => {\n    clearSelectedCocktail();\n    clearError();\n  }\n\n  const handleResetSearch = () => {\n    resetState();\n    fetchRandomCocktail();\n  }\n\n  if (error.message) return null;\n\n  const setPageTitle = () => {\n    if (cocktail.isRandom && !selectedCocktail) return 'Featured Cocktail';\n    if (selectedCocktail) return `${selectedCocktail.strDrink} Recipe`;\n    return 'Search Results';\n  }\n\n  return (\n    <div className=\"page-title\">\n      <Container>\n        <Row >\n          <Col className=\"page-title_title\">\n            {selectedCocktail && <Link to=\"/\" ><FontAwesomeIcon icon={faArrowLeft} onClick={handleClick} /></Link>}\n            <h3 className={cocktail.isRandom ? \"page-title_title-random\" : \"page-title_title-selected\"}>\n              {setPageTitle()}\n            </h3>\n            {cocktail.isRandom || selectedCocktail ? null : <Button color=\"primary\" onClick={handleResetSearch}>Reset</Button>}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail,\n    loading: state.loading,\n    error: state.error\n  }\n}\n\nexport default connect(mapStateToProps, {\n  clearSelectedCocktail,\n  clearError,\n  resetState,\n  fetchRandomCocktail\n})(PageTitle);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCocktail } from '@fortawesome/free-solid-svg-icons';\nimport PageTitle from './pageTitle';\n\nimport { clearSelectedCocktail } from '../store/actions'\n\nconst Header = (props) => {\n  const { clearSelectedCocktail } = props;\n\n  const handleReturnHome = () => {\n    clearSelectedCocktail();\n  }\n\n  return (\n    <div className=\"header\" >\n      <Link to=\"/\" onClick={handleReturnHome}>\n        <FontAwesomeIcon icon={faCocktail} />\n      </Link>\n      <h1>Cocktail Recipes</h1>\n      <PageTitle />\n    </div>\n  );\n}\n\nexport default connect(null, { clearSelectedCocktail })(Header);","import React from 'react';\nimport { Spinner } from 'reactstrap';\n\nexport const LoadingSpinner = () => {\n  return (\n    <div className=\"\" style={{ marginTop: \"250px\", height: \"100vh\" }}>\n      <Spinner color=\"info\" />\n    </div>\n  )\n}\n\nexport default LoadingSpinner;","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchType } from '../../store/actions'\n\nexport const SearchTypeDropdown = (props) => {\n  const { clearSearchFilters, setSearchType, search } = props;\n  const { searchType } = search;\n  const [searchByDropdownOpen, setSearchByDropdownOpen] = useState(false);\n  const toggleSearchDropdown = (e) => setSearchByDropdownOpen(prevState => !prevState);\n\n  const onSelectSearchType = (e) => {\n    clearSearchFilters();\n    setSearchType(e.target.value)\n  }\n\n  return (\n    <Dropdown isOpen={searchByDropdownOpen} toggle={toggleSearchDropdown}>\n      <DropdownToggle caret>\n        {searchType ? searchType.toUpperCase() : \"Search By\"}\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectSearchType} value=\"name\">Name</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"ingredient\">Ingredient</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"alcoholContent\">Alcohol Content</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"glassType\">Glass Type</DropdownItem>\n        <DropdownItem onClick={onSelectSearchType} value=\"random\">Random</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchType })(SearchTypeDropdown);","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchParams } from '../../store/actions';\n\nexport const AlcoholContentDropdown = (props) => {\n  const { setSearchParams, clearSearchFilters } = props;\n  const { searchType } = props.search;\n  const [alcoholContentDropdownOpen, setAlcoholContentDropdownOpen] = useState(false);\n  const toggleAlcoholContentDropdown = () => setAlcoholContentDropdownOpen(prevState => !prevState);\n\n  const onSelectAlcoholContent = (e) => {\n    clearSearchFilters();\n    setSearchParams(searchType, e.target.value);\n  };\n\n  return (\n    <Dropdown isOpen={alcoholContentDropdownOpen} toggle={toggleAlcoholContentDropdown}>\n      <DropdownToggle caret>\n        Alcohol Content\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"alcoholic\">Alcoholic</DropdownItem>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"non alcoholic\">Non Alcoholic</DropdownItem>\n        <DropdownItem onClick={onSelectAlcoholContent} value=\"optional alcohol\">Optional Alcohol</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchParams })(AlcoholContentDropdown);","import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport { setSearchParams } from '../../store/actions';\n\nexport const GlassTypeDropdown = (props) => {\n  const { clearSearchFilters, setSearchParams, search } = props;\n  const { searchType } = search;\n  const [glassTypeDropdownOpen, setGlassTypeDropdownOpen] = useState(false);\n  const toggleGlassTypeDropdown = () => setGlassTypeDropdownOpen(prevState => !prevState);\n\n  const onSelectGlassType = (e) => {\n    clearSearchFilters();\n    setSearchParams(searchType, e.target.value);\n  };\n\n\n  return (\n    <Dropdown isOpen={glassTypeDropdownOpen} toggle={toggleGlassTypeDropdown}>\n      <DropdownToggle caret>\n        Glass Type\n      </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={onSelectGlassType} value=\"highball glass\">Highball Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"cocktail glass\">Cocktail Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"old-fashioned glass\">Old-fashioned Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"whiskey glass\">Whiskey Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"collins glass\">Collins Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"pousse cafe glass\">Pousse Cafe Glass</DropdownItem>\n        <DropdownItem onClick={onSelectGlassType} value=\"champagne flute\">Champagne Flute</DropdownItem>\n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  }\n}\n\nexport default connect(mapStateToProps, { setSearchParams })(GlassTypeDropdown);","import React from 'react';\nimport { Alert } from 'reactstrap';\n\nconst ErrorMessage = ({ message }) => {\n  return <Alert color=\"danger\">{message}</Alert>\n}\n\nexport default ErrorMessage;","import React from 'react';\nimport { InputGroup, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\n\nimport SearchTypeDropdown from './dropdowns/SearchTypeDropdown';\nimport AlcoholContentDropdown from './dropdowns/AlcoholContentDropdown';\nimport GlassTypeDropdown from './dropdowns/GlassTypeDropdown';\nimport ErrorMessage from './ErrorMessage';\n\nimport {\n  searchCocktailsByName,\n  searchCocktailsByIngredient,\n  searchCocktailsByGlassType,\n  searchCocktailsByAlcoholContent,\n  fetchRandomCocktail,\n  setSearchType,\n  setSearchTerm,\n  clearSearchTerm,\n  setSearchParams,\n  clearSearchParams\n} from '../store/actions';\n\nconst CocktailSearch = (props) => {\n  const {\n    search,\n    error,\n    searchCocktailsByName,\n    searchCocktailsByIngredient,\n    searchCocktailsByGlassType,\n    searchCocktailsByAlcoholContent,\n    fetchRandomCocktail,\n    setSearchTerm,\n    clearSearchTerm,\n    clearSearchParams\n  } = props;\n  const { searchType, searchTerm, searchParams } = search;\n\n  const onSearchTermChange = (e) => {\n    clearSearchFilters();\n    setSearchTerm(e.target.value)\n  };\n\n  const handleSearchSubmit = () => {\n    switch (searchType) {\n      case \"name\":\n        return searchCocktailsByName(searchTerm);\n      case \"ingredient\":\n        return searchCocktailsByIngredient(searchTerm);\n      case \"glassType\":\n        return searchCocktailsByGlassType(searchParams.glassType);\n      case \"alcoholContent\":\n        return searchCocktailsByAlcoholContent(searchParams.alcoholContent);\n      case \"random\":\n        return fetchRandomCocktail();\n      default:\n        return;\n    }\n  };\n\n  const showSubmitButton = () => {\n    const { glassType, alcoholContent } = searchParams\n    if ((searchType === \"name\" || searchType === \"ingredient\") && (searchTerm !== null && searchTerm !== \"\")) return true;\n    if (searchType === \"alcoholContent\" && alcoholContent !== null) return true;\n    if (searchType === \"glassType\" && glassType !== null) return true;\n    if (searchType === \"random\") return true;\n  }\n\n  const clearSearchFilters = () => {\n    clearSearchTerm();\n    clearSearchParams();\n  }\n\n  return (\n    <div className=\"container cocktail-search\">\n      <h4>Search Cocktails</h4>\n      <SearchTypeDropdown clearSearchFilters={clearSearchFilters} />\n      {searchType === \"alcoholContent\" ? <AlcoholContentDropdown clearSearchFilters={clearSearchFilters} /> : null}\n      {searchType === \"glassType\" ? <GlassTypeDropdown clearSearchFilters={clearSearchFilters} /> : null}\n      {\n        searchType === \"name\" || searchType === \"ingredient\" ? (\n          <InputGroup>\n            <Input\n              placeholder=\"enter search term\"\n              className={`cocktail-search_input ${error.message && 'error'}`}\n              onChange={onSearchTermChange}\n            />\n          </InputGroup>\n        ) : null\n      }\n      {error.message ? <ErrorMessage message={error.message} /> : null}\n      {\n        showSubmitButton() ? <Button color=\"primary\" onClick={handleSearchSubmit}>Search</Button> : null\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search,\n    error: state.error\n  }\n}\n\nexport default connect(mapStateToProps, {\n  searchCocktailsByName,\n  searchCocktailsByIngredient,\n  searchCocktailsByGlassType,\n  searchCocktailsByAlcoholContent,\n  fetchRandomCocktail,\n  setSearchType,\n  setSearchTerm,\n  clearSearchTerm,\n  setSearchParams,\n  clearSearchParams\n})(CocktailSearch);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col } from 'reactstrap'\n\nimport CocktailSearch from './CocktailSearch'\n\nconst CocktailRandom = ({ cocktail }) => {\n  const cocktailId = Object.keys(cocktail)[0];\n\n  return (\n    <Row>\n      <Col xs=\"12\" md=\"6\" className=\"cocktail-list_image\">\n        <div className=\"cocktail-list_image-image\">\n          <img src={`${cocktail[cocktailId].strDrinkThumb}`} alt=\"margarita\" />\n          <p>{cocktail[cocktailId].strDrink}</p>\n          <Link to={`details/${cocktailId}`} className=\"btn btn-primary\" onClick={() => window.location.href = `details/${cocktailId}`}>Recipe</Link>\n\n        </div>\n      </Col>\n      <Col xs=\"12\" md=\"6\" className=\"cocktail-list_details\">\n        <CocktailSearch />\n      </Col>\n    </Row>\n  )\n}\n\nexport default CocktailRandom;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Col } from 'reactstrap';\n\nconst CocktailSearchResult = ({ searchResult }) => {\n  return (\n    <Col xs={12} md={6} lg={3} className=\"cocktail-search-results_result\">\n      <Link to={`/details/${searchResult.idDrink}`}>\n        <img src={`${searchResult.strDrinkThumb}`} alt={`${searchResult.strDrink}`} />\n        <p>{searchResult.strDrink}</p>\n      </Link>\n    </Col>\n  );\n}\n\nexport default CocktailSearchResult;","import React from 'react';\nimport { Container, Row } from 'reactstrap';\n\nimport CocktailSearchResult from './CocktailSearchResult'\n\nconst CocktailSearchResults = ({ cocktails }) => {\n\n  const renderSearchResults = () => {\n    const searchResults = []\n    for (const cocktail in cocktails) {\n      searchResults.push(cocktail);\n    }\n\n    return searchResults.map(searchResult => <CocktailSearchResult searchResult={cocktails[searchResult]} key={cocktails[searchResult].idDrink} />);\n  }\n\n  return (\n    <Container className=\"cocktail-search-results\">\n      <Row>\n        {renderSearchResults()}\n      </Row>\n    </Container >\n  );\n}\n\nexport default CocktailSearchResults;","import React, { Component } from 'react';\nimport { Container } from 'reactstrap'\nimport { connect } from 'react-redux'\n\nimport CocktailRandom from './CocktailRandom';\nimport CocktailSearchResults from './CocktailSearchResults';\n\nclass CocktailList extends Component {\n  render() {\n    const { cocktail } = this.props;\n    const { cocktails, isRandom } = cocktail;\n\n    return (\n      <Container className=\"cocktail-list\">\n        {\n          isRandom ? <CocktailRandom cocktail={cocktails} /> : <CocktailSearchResults cocktails={cocktails} />\n        }\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail\n  }\n}\n\nexport default connect(mapStateToProps)(CocktailList);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchRandomCocktail } from '../store/actions';\nimport LoadingSpinner from './LoadingSpinner'\nimport CocktailList from './CocktailList';\n\nconst Home = (props) => {\n  const { loading, fetchRandomCocktail, cocktail } = props;\n\n  useEffect(() => {\n    if (!Object.keys(cocktail.cocktails).length) {\n      fetchRandomCocktail();\n    }\n  }, []);\n\n  if (loading) {\n    return <LoadingSpinner />\n  }\n\n  return (\n    <div className=\"\">\n      <CocktailList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    cocktail: state.cocktail\n  };\n};\n\nexport default connect(mapStateToProps, { fetchRandomCocktail })(Home);","import React from 'react';\nimport { Col } from 'reactstrap';\n\nconst CocktailIngredient = ({ ingredient }) => {\n  return (\n    <Col xs=\"6\" md=\"3\" className=\"cocktail-details_details-ingredients_ingredient\">\n      <img src={`https://www.thecocktaildb.com/images/ingredients/${ingredient.name}.png`} alt={`${ingredient.name}`} />\n      <p>{ingredient.name}</p>\n      <p>{ingredient.measure}</p>\n    </Col>\n  );\n}\n\nexport default CocktailIngredient;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailInstructions = ({ instructions }) => {\n  return (\n    <Row>\n      <Col className=\"cocktail-details_details-instructions\">\n        <h4>Instructions</h4>\n        <div className=\"\">\n          <p>{instructions}</p>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailInstructions;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailAlternatives = ({ alternatives }) => {\n  return (\n    <Row>\n      <Col>\n        <div className=\"cocktail-details_details-alternatives\">\n          <h4>Alternatives</h4>\n          <div className=\"\">\n            <p>{alternatives}</p>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailAlternatives;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nconst CocktailGlassType = ({ glassType }) => {\n  return (\n    <Row>\n      <Col className=\"cocktail-details_details-glass\">\n        <h4>Glass Type</h4>\n        <div className=\"\">\n          <p>{glassType}</p>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CocktailGlassType;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { fetchCocktailById, clearError, clearSelectedCocktail } from '../store/actions'\nimport CocktailIngredient from './CocktailIngredient';\nimport CocktailInstructions from './CocktailInstructions';\nimport CocktailAlternatives from './CocktailAlternatives';\nimport CocktailGlassType from './CocktailGlassType';\nimport LoadingSpinner from './LoadingSpinner';\n\nclass CocktailDetails extends Component {\n  constructor() {\n    super();\n\n    this.renderIngredients = this.renderIngredients.bind(this);\n    this.resetError = this.resetError.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.fetchCocktailById(id);\n  }\n\n  renderIngredients = (selectedCocktail) => {\n    let ingredients = [];\n\n    for (let i = 1; i <= 15; i++) {\n      if (selectedCocktail[`strIngredient${i}`]) {\n        const ingredient = {};\n        ingredient.name = selectedCocktail[`strIngredient${i}`];\n        ingredient.measure = selectedCocktail[`strMeasure${i}`];\n\n        ingredients.push(ingredient);\n      }\n    }\n\n    return ingredients.map((ingredient, i) => {\n      return <CocktailIngredient ingredient={ingredient} key={i} />\n    })\n  }\n\n  resetError = () => {\n    this.props.clearError()\n    this.props.clearSelectedCocktail();\n  }\n\n  render() {\n    const { cocktail, error, loading } = this.props;\n    const { selectedCocktail } = cocktail;\n\n    { if (loading) return <LoadingSpinner /> }\n\n    return selectedCocktail && !error.message ? (\n      <Container className=\"cocktail-details\">\n        <Row>\n          <Col md=\"6\" xs=\"12\" className=\"cocktail-details_image\">\n            {<div className=\"cocktail-details_image-image\">\n              <img src={`${selectedCocktail.strDrinkThumb}`} alt=\"margarita\" />\n            </div>}\n          </Col>\n          <Col md=\"6\" xs=\"12\" className=\"cocktail-details_details\">\n            <Row>\n              <h4>Ingredients</h4>\n              {this.renderIngredients(selectedCocktail)}\n            </Row>\n            <CocktailInstructions instructions={selectedCocktail.strInstructions} />\n            <CocktailGlassType glassType={selectedCocktail.strGlass} />\n            {\n              selectedCocktail.strDrinkAlternate ? <CocktailAlternatives alternatives={selectedCocktail.strDrinkAlternate} /> : null\n            }\n          </Col>\n        </Row>\n      </Container>\n    ) : error.message && <Container className=\"cocktail-details\">\n      <Row>\n        <Col xs={12}>\n          {error.message}\n        </Col>\n        <Col xs={12}>\n          <Link to=\"/\" onClick={this.resetError}>Go Back</Link>\n        </Col>\n      </Row>\n    </Container>\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cocktail: state.cocktail,\n    error: state.error,\n    loading: state.loading\n  }\n}\n\nexport default connect(mapStateToProps, { fetchCocktailById, clearError, clearSelectedCocktail })(CocktailDetails);","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        {\"\\u00A9\"} {new Date().getFullYear()}{\" \"}\n        <a\n          href=\"https://donatron.github.io/portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Don Macarthur\n        </a>\n      </p>\n    </div>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);","import { Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/style.scss';\n\nimport Header from './components/header';\nimport Home from './components/Home';\nimport CocktailDetails from './components/CocktailDetails';\nimport CocktailSearchResults from './components/CocktailSearchResults';\nimport Footer from './components/footer';\nimport ScrollToTop from './components/ScrollToTop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ScrollToTop>\n        <Header />\n        <Switch>\n          <Route path=\"/search-results\" component={CocktailSearchResults} />\n          <Route path=\"/details/:id\" component={CocktailDetails} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </ScrollToTop>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_RANDOM_COCKTAIL,\n  FETCH_COCKTAILS,\n  FETCH_COCKTAIL,\n  CLEAR_SELECTED_COCKTAIL,\n  RESET_STATE,\n} from '../actions';\n\nconst initialState = {\n  isRandom: false,\n  cocktails: {},\n  selectedCocktail: null\n}\n\nexport default function cocktailReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_RANDOM_COCKTAIL:\n      return {\n        ...state,\n        cocktails: {\n          [action.payload.idDrink]: action.payload\n        },\n        isRandom: true\n      }\n    case FETCH_COCKTAILS:\n      const cocktailRecipes = {}\n      action.payload.map(cocktail => {\n        return cocktailRecipes[cocktail.idDrink] = cocktail\n      });\n\n      return {\n        ...state,\n        isRandom: false,\n        cocktails: cocktailRecipes\n      }\n    case FETCH_COCKTAIL:\n      return {\n        ...state,\n        selectedCocktail: action.payload\n      }\n    case CLEAR_SELECTED_COCKTAIL:\n      return {\n        ...state,\n        selectedCocktail: null\n      }\n    case RESET_STATE:\n      return initialState\n    default:\n      return state;\n  }\n}","import {\n  SET_SEARCH_TYPE,\n  SET_SEARCH_TERM,\n  CLEAR_SEARCH_TERM,\n  SET_SEARCH_PARAMS,\n  CLEAR_SEARCH_PARAMS,\n  RESET_STATE\n} from '../actions'\n\nconst initialState = {\n  searchType: null,\n  searchTerm: null,\n  searchParams: {\n    glassType: null,\n    alcoholContent: null\n  }\n}\n\nexport default function searchReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SEARCH_TYPE:\n      return {\n        ...state,\n        searchType: action.payload\n      }\n    case SET_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: action.payload\n      }\n    case CLEAR_SEARCH_TERM:\n      return {\n        ...state,\n        searchTerm: null\n      }\n    case SET_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: {\n          ...state.searchParams,\n          [action.searchType]: action.payload\n        }\n      }\n    case CLEAR_SEARCH_PARAMS:\n      return {\n        ...state,\n        searchParams: {\n          ...initialState.searchParams\n        }\n      }\n    case RESET_STATE:\n      return initialState\n    default:\n      return state;\n  }\n}","import { SET_ERROR, CLEAR_ERROR, RESET_STATE } from '../actions';\n\nconst initialState = {\n  message: null\n}\n\nexport default function errorReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_ERROR:\n      return {\n        ...state,\n        message: action.payload\n      }\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        message: null\n      }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport loadingReducer from './loadingReducer';\nimport cocktailReducer from './cocktailReducer';\nimport searchReducer from './searchReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  loading: loadingReducer,\n  cocktail: cocktailReducer,\n  search: searchReducer,\n  error: errorReducer\n});","import { DATA_LOADING } from '../actions';\n\nconst initialState = false;\n\nexport default function loadingReducer(state = initialState, action) {\n  switch (action.type) {\n    case DATA_LOADING:\n      return !state\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['loading']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers);\n\nexport const store = process.env.NODE_ENV === 'production' ?\n  createStore(persistedReducer, applyMiddleware(thunk)) :\n  createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk)));\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App';\nimport { store, persistor } from './store/store';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/\">\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}